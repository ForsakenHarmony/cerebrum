/*
 Copyright (C) 2012 jaseg <s@jaseg.de>

 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 version 3 as published by the Free Software Foundation.
 */

#include <avr/io.h>
#include <util/delay.h>

void ${modulevar("buf")}_commit(void){
	uint8_t t = 0;
	for(uint8_t i = 7; i>0; i--){
		for(uint8_t j = 0; j<i; j++){
			${modulevar("internalBuffer")}[i] |= ${modulevar("externalBuffer")}[t];
			t++;
		}
	}
}

//The DDRs of the led matrix outputs are set in the mux loop.
void ${loop_function} (){
	static uint8_t row = 2;	//selects the currently active "row" of the matrix. On the
							//protoboards I make, this more or less corresponds to physical traces.
	static uint8_t i = 0;
	uint8_t ddr = ${modulevar("internalBuffer")}[i];
	uint8_t port = ~ddr;
	port |= row;
	ddr |= row;
	PORT${member["port"]} = port;
	DDR${member["port"]} = ddr;
	row <<= 1;
	i++;
	if(row == 0){
		row = 2;
		i = 0;
	}
}

//this scary construct is in place to make the compiler happy. if you know a better way, feel free to improve.
uint8_t ${modulevar("internalBuffer")}[7];
uint8_t ${modulevar("externalBuffer", "uint8_t", "28B", 28, set_action=modulevar("buf")+"_commit();")};


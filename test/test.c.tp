
#include <stdint.h>
#include <stdlib.h>
#include <stdio.h>
#define debug_print(...) //fprintf(stderr, __VA_ARGS__)

void ${module_callback("test_callback", argformat="65B")} (const comm_callback_descriptor* cb, void* argbuf_end){
	uint8_t* args = (uint8_t*) cb->argbuf;
    for(uint8_t* i = args; i<(uint8_t*)argbuf_end; i++){
        if(*i != 'A'){
            debug_print("Wrong byte in argument buffer at position 0x%x. Expected 0x41, got 0x%x\n", i, *i);
            exit(1);
        }
    }
}

${modulevar("test_buffer", "uint8_t", "257B", array=257)};

void ${module_callback("check_test_buffer")} (const comm_callback_descriptor* cb, void* argbuf_end){
    for(unsigned int i=0; i<sizeof(${modulevar("test_buffer")}); i++){
        uint8_t expected = 'A' + (i/32);
        if(${modulevar("test_buffer")}[i] != expected){
            debug_print("Wrong byte in the test buffer at position %d. Expected 0x%x, got 0x%x\n", i, expected, ${modulevar("test_buffer")}[i]);
            exit(1);
        }
    }
}

void ${module_callback("test_callback_long_args", argformat="257B")} (const comm_callback_descriptor* cb, void* argbuf_end){
	uint8_t* args = (uint8_t*)cb->argbuf;
    for(uint8_t* i = args; i < (uint8_t*)argbuf_end; i++){
        if(*i != 'A'){
            debug_print("Wrong byte in argument buffer. Expected 0x41, got 0x%x\n", *i);
            exit(1);
        }
    }
	uint16_t argsize = (uint8_t*)argbuf_end - args;
    if(argsize != 257){
        debug_print("Wrong argument size. Expected 257, got %d\n", argsize);
        exit(1);
    }
}

